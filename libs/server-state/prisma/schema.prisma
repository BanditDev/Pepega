generator client {
  provider      = "prisma-client-js"
  output        = "../../../node_modules/@prisma/server-state"
  binaryTargets = ["native", "rhel-openssl-1.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://postgres:postgres@postgres:5432/server-state?schema=public"
}

model Token {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  userId    String
}

model Connection {
  id         String   @id @default(cuid())
  instanceId String?
  ipHash     String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now()) @updatedAt
  user       User?    @relation(fields: [userId], references: [id])
  userId     String?
}

model User {
  id         String       @id @default(cuid())
  name       String?
  avatar     String?
  banned     Boolean?     @default(false)
  coins      Int          @default(100)
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @default(now()) @updatedAt
  profiles   Profile[]
  tokens     Token[]
  connection Connection[]
}

model Profile {
  id           String  @id @default(cuid())
  provider     String
  serviceId    String
  name         String?
  avatar       String?
  email        String?
  accessToken  String?
  refreshToken String?
  user         User    @relation(fields: [userId], references: [id])
  userId       String
}

model Project {
  id        String         @id @default(cuid())
  title     String
  alias     String?
  stateId   String?
  createdAt DateTime       @default(now())
  updatedAt DateTime       @default(now()) @updatedAt
  states    ProjectState[]
}

model ProjectState {
  id        String   @id @default(cuid())
  count     Int
  projectId String?
  project   Project? @relation(fields: [projectId], references: [id])
  deleted   Boolean? @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}
